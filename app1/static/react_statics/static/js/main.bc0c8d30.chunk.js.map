{"version":3,"sources":["Components/AppBar.js","Components/Content/Card.js","Components/api/getVillas.js","Components/Content/Grid.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","props","classes","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","Menu_default","Typography_default","variant","Button_default","RecipeReviewCard","state","expanded","handleExpandClick","_this","setState","this","Card_default","card","CardHeader_default","avatar","Avatar_default","action","MoreVert_default","title","item","subheader","pub_date","CardMedia_default","media","image","pohto","CardContent_default","component","comment","CardActions_default","actions","disableActionSpacing","Favorite_default","Share_default","classnames","expand","Object","defineProperty","expandOpen","onClick","aria-expanded","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","paragraph","React","Component","theme","maxWidth","height","paddingTop","display","transform","transition","transitions","create","duration","shortest","backgroundColor","red","_callee","villaID","url","response","data","regenerator_default","wrap","_context","prev","next","concat","console","log","fetch","method","headers","Accept","Content-Type","sent","json","abrupt","stop","getVillaData","CardInGrid","_ref","index","Grid_default","key","id","Content_Card","GuttersGrid","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","value","spacing","error","isLoaded","items","_this2","getVillas","then","result","_this$state","message","container","xs","demo","justify","Number","map","Grid_CardInGrid","Paper_default","control","FormLabel_default","RadioGroup_default","name","onChange","row","FormControlLabel_default","Radio_default","label","paper","width","App","Components_AppBar","Content_Grid","md","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc0c8d30.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nfunction ButtonAppBar(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            News\r\n          </Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nButtonAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ButtonAppBar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classnames from 'classnames';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport red from '@material-ui/core/colors/red';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    maxWidth: 400,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  actions: {\r\n    display: 'flex',\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n});\r\n\r\nclass RecipeReviewCard extends React.Component {\r\n  state = { expanded: false };\r\n  componentDidMount() {\r\n    //console.log(this.props.item)\r\n  }\r\n  handleExpandClick = () => {\r\n    this.setState(state => ({ expanded: !state.expanded }));\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"Recipe\" className={classes.avatar}>\r\n              R\r\n            </Avatar>\r\n          }\r\n          action={\r\n            <IconButton>\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          }\r\n          title={this.props.item.title}\r\n          subheader={this.props.item.pub_date}\r\n        />\r\n        <CardMedia          \r\n          className={classes.media}\r\n          image={this.props.item.pohto}\r\n          title=\"نمونه عکس\"\r\n        />\r\n        <CardContent>\r\n          <Typography component=\"p\">\r\n          {this.props.item.comment}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.actions} disableActionSpacing>\r\n          <IconButton aria-label=\"Add to favorites\">\r\n            <FavoriteIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"Share\">\r\n            <ShareIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classnames(classes.expand, {\r\n              [classes.expandOpen]: this.state.expanded,\r\n            })}\r\n            onClick={this.handleExpandClick}\r\n            aria-expanded={this.state.expanded}\r\n            aria-label=\"Show more\"\r\n          >\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n        </CardActions>\r\n        <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Typography paragraph>Method:</Typography>\r\n            <Typography paragraph>\r\n              Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\r\n              minutes.\r\n            </Typography>\r\n            <Typography paragraph>\r\n              Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet over medium-high\r\n              heat. Add chicken, shrimp and chorizo, and cook, stirring occasionally until lightly\r\n              browned, 6 to 8 minutes. Transfer shrimp to a large plate and set aside, leaving\r\n              chicken and chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes, onion,\r\n              salt and pepper, and cook, stirring often until thickened and fragrant, about 10\r\n              minutes. Add saffron broth and remaining 4 1/2 cups chicken broth; bring to a boil.\r\n            </Typography>\r\n            <Typography paragraph>\r\n              Add rice and stir very gently to distribute. Top with artichokes and peppers, and cook\r\n              without stirring, until most of the liquid is absorbed, 15 to 18 minutes. Reduce heat\r\n              to medium-low, add reserved shrimp and mussels, tucking them down into the rice, and\r\n              cook again without stirring, until mussels have opened and rice is just tender, 5 to 7\r\n              minutes more. (Discard any mussels that don’t open.)\r\n            </Typography>\r\n            <Typography>\r\n              Set aside off of the heat to let rest for 10 minutes, and then serve.\r\n            </Typography>\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nRecipeReviewCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(RecipeReviewCard);\r\n","async function getVillaData(villaID)\r\n        { var url\r\n          if (villaID==0){\r\n            url = 'http://84.241.1.59:8080/api/villa/?format=json'\r\n            //url ='https://api.github.com/search/repositories?q=stars:%3E1+language:javascript&sort=stars&order=desc&type=Repositories'\r\n          }\r\n          else{\r\n            url = \"http://84.241.1.59:8080/api/villa/\".concat(villaID).concat(\"/?format=json\")\r\n          }          \r\n            \r\n        console.log('villas: ' + url)\r\n        let response = await fetch(url, {\r\n            method: 'GET',            \r\n            headers: {Accept: 'application/json', 'Content-Type': 'application/json',},\r\n        })\r\n        //let response = await fetch(url, {method: 'GET', mode: 'no-cors'})\r\n        let data = await response.json()\r\n        return data\r\n        }\r\n\r\nexport default getVillaData;        ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from './Card';\r\nimport getVillas from '../api/getVillas';\r\n//import axios from 'axios';\r\n\r\nconst CardInGrid = ({ item, index }) =>\r\n    <Grid key={item.id} item>\r\n      <Card item = {item}/>\r\n    </Grid>\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    //height: 140,\r\n    width: 100,\r\n  },\r\n  /*control: {\r\n    padding: theme.spacing(2),\r\n  },*/\r\n});\r\n\r\nclass GuttersGrid extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      spacing: '1',\r\n      error: null,\r\n      isLoaded: false,\r\n      items: []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n      getVillas(0)        \r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result\r\n            })\r\n          },          \r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error: error\r\n            })\r\n          }\r\n        )      \r\n    }\r\n  handleChange = key => (event, value) => {\r\n    this.setState({\r\n      [key]: value,\r\n    });\r\n  };\r\n  \r\n  render() {\r\n    const { classes } = this.props;    \r\n    const { spacing, error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n          //console.log(items)\r\n          return (\r\n            <Grid container className={classes.root} spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Grid container className={classes.demo} justify=\"center\" spacing={Number(spacing)}>\r\n                {items.map((item, index) =>\r\n                  <CardInGrid item={item} index={index} key={item.id} />,\r\n                )}                \r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Paper className={classes.control}>\r\n                  <Grid container>\r\n                    <Grid item>\r\n                      <FormLabel>spacing</FormLabel>\r\n                      <RadioGroup\r\n                        name=\"spacing\"\r\n                        aria-label=\"Spacing\"\r\n                        value={spacing}\r\n                        onChange={this.handleChange('spacing')}\r\n                        row\r\n                      >\r\n                        <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\r\n                        <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\r\n                        <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />                  \r\n                      </RadioGroup>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          );\r\n      }\r\n  }\r\n}\r\n\r\nGuttersGrid.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(GuttersGrid);","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport AppBar from './Components/AppBar';\nimport Grid from './Components/Content/Grid';\n\n\nfunction App() {\n  return (\n\t<div className=\"App\">\n      <AppBar />\n      <Grid container spacing={24}>\n        <Grid item md={3} />                         \n      </Grid>           \n  </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}